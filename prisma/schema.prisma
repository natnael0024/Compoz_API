// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String
  email String
  password String
  avatar String?
  occupation String?
  bio String?  @db.VarChar(100)
  created_at DateTime @default(now())
  updated_at DateTime? @updatedAt
  blogs Blog[] @relation("UserToBlog") 
  likes Like[]    @relation("UserToLike")
}

model Blog {
  id Int @id @default(autoincrement())
  title String
  content String @db.VarChar(50000)
  category Category @relation("BlogToCategory", fields: [category_id], references: [id])
  category_id Int 
  image String? @db.VarChar(500)
  created_at DateTime @default(now())
  updated_at DateTime? @updatedAt 
  user  User  @relation("UserToBlog", fields: [user_id], references: [id], onDelete:Cascade)
  user_id  Int
  views Int @default(0)
  likes Like[]    @relation("BlogToLike")
  likes_count Int @default(0)
}

model Category {
  id Int @id @default(autoincrement())
  name String
  icon String?
  created_at DateTime @default(now())
  updated_at DateTime? @updatedAt
  blog Blog[] @relation("BlogToCategory")
}

model Like {
  id         Int       @id @default(autoincrement())
  user_id    Int
  blog_id    Int
  created_at DateTime @default(now())
  
  user       User      @relation("UserToLike", fields: [user_id], references: [id])
  blog       Blog      @relation("BlogToLike", fields: [blog_id], references: [id])

  @@unique([user_id, blog_id])  // Composite unique constraint
}